// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OfflineService.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "OfflineService.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ik_OfflineService {

namespace {

const ::google::protobuf::Descriptor* WriteOfflineRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WriteOfflineRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReadOfflineRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReadOfflineRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReadOfflineResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReadOfflineResponse_reflection_ = NULL;
const ::google::protobuf::ServiceDescriptor* OfflineServiceRpc_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_OfflineService_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_OfflineService_2eproto() {
  protobuf_AddDesc_OfflineService_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "OfflineService.proto");
  GOOGLE_CHECK(file != NULL);
  WriteOfflineRequest_descriptor_ = file->message_type(0);
  static const int WriteOfflineRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteOfflineRequest, friend_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteOfflineRequest, msg_),
  };
  WriteOfflineRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WriteOfflineRequest_descriptor_,
      WriteOfflineRequest::default_instance_,
      WriteOfflineRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(WriteOfflineRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteOfflineRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteOfflineRequest, _is_default_instance_));
  ReadOfflineRequest_descriptor_ = file->message_type(1);
  static const int ReadOfflineRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadOfflineRequest, myid_),
  };
  ReadOfflineRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReadOfflineRequest_descriptor_,
      ReadOfflineRequest::default_instance_,
      ReadOfflineRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReadOfflineRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadOfflineRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadOfflineRequest, _is_default_instance_));
  ReadOfflineResponse_descriptor_ = file->message_type(2);
  static const int ReadOfflineResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadOfflineResponse, msg_),
  };
  ReadOfflineResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReadOfflineResponse_descriptor_,
      ReadOfflineResponse::default_instance_,
      ReadOfflineResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReadOfflineResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadOfflineResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadOfflineResponse, _is_default_instance_));
  OfflineServiceRpc_descriptor_ = file->service(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_OfflineService_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WriteOfflineRequest_descriptor_, &WriteOfflineRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReadOfflineRequest_descriptor_, &ReadOfflineRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReadOfflineResponse_descriptor_, &ReadOfflineResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_OfflineService_2eproto() {
  delete WriteOfflineRequest::default_instance_;
  delete WriteOfflineRequest_reflection_;
  delete ReadOfflineRequest::default_instance_;
  delete ReadOfflineRequest_reflection_;
  delete ReadOfflineResponse::default_instance_;
  delete ReadOfflineResponse_reflection_;
}

void protobuf_AddDesc_OfflineService_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_OfflineService_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fempty_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024OfflineService.proto\022\021ik_OfflineServic"
    "e\032\033google/protobuf/empty.proto\"5\n\023WriteO"
    "fflineRequest\022\021\n\tfriend_id\030\001 \001(\005\022\013\n\003msg\030"
    "\002 \001(\014\"\"\n\022ReadOfflineRequest\022\014\n\004myid\030\001 \001("
    "\005\"\"\n\023ReadOfflineResponse\022\013\n\003msg\030\001 \003(\0142\301\001"
    "\n\021OfflineServiceRpc\022N\n\014WriteOffline\022&.ik"
    "_OfflineService.WriteOfflineRequest\032\026.go"
    "ogle.protobuf.Empty\022\\\n\013ReadOffline\022%.ik_"
    "OfflineService.ReadOfflineRequest\032&.ik_O"
    "fflineService.ReadOfflineResponseB\003\200\001\001b\006"
    "proto3", 406);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "OfflineService.proto", &protobuf_RegisterTypes);
  WriteOfflineRequest::default_instance_ = new WriteOfflineRequest();
  ReadOfflineRequest::default_instance_ = new ReadOfflineRequest();
  ReadOfflineResponse::default_instance_ = new ReadOfflineResponse();
  WriteOfflineRequest::default_instance_->InitAsDefaultInstance();
  ReadOfflineRequest::default_instance_->InitAsDefaultInstance();
  ReadOfflineResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_OfflineService_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_OfflineService_2eproto {
  StaticDescriptorInitializer_OfflineService_2eproto() {
    protobuf_AddDesc_OfflineService_2eproto();
  }
} static_descriptor_initializer_OfflineService_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteOfflineRequest::kFriendIdFieldNumber;
const int WriteOfflineRequest::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteOfflineRequest::WriteOfflineRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ik_OfflineService.WriteOfflineRequest)
}

void WriteOfflineRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

WriteOfflineRequest::WriteOfflineRequest(const WriteOfflineRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ik_OfflineService.WriteOfflineRequest)
}

void WriteOfflineRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  friend_id_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

WriteOfflineRequest::~WriteOfflineRequest() {
  // @@protoc_insertion_point(destructor:ik_OfflineService.WriteOfflineRequest)
  SharedDtor();
}

void WriteOfflineRequest::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void WriteOfflineRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteOfflineRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WriteOfflineRequest_descriptor_;
}

const WriteOfflineRequest& WriteOfflineRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_OfflineService_2eproto();
  return *default_instance_;
}

WriteOfflineRequest* WriteOfflineRequest::default_instance_ = NULL;

WriteOfflineRequest* WriteOfflineRequest::New(::google::protobuf::Arena* arena) const {
  WriteOfflineRequest* n = new WriteOfflineRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WriteOfflineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ik_OfflineService.WriteOfflineRequest)
  friend_id_ = 0;
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool WriteOfflineRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ik_OfflineService.WriteOfflineRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 friend_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &friend_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // optional bytes msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ik_OfflineService.WriteOfflineRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ik_OfflineService.WriteOfflineRequest)
  return false;
#undef DO_
}

void WriteOfflineRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ik_OfflineService.WriteOfflineRequest)
  // optional int32 friend_id = 1;
  if (this->friend_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->friend_id(), output);
  }

  // optional bytes msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:ik_OfflineService.WriteOfflineRequest)
}

::google::protobuf::uint8* WriteOfflineRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ik_OfflineService.WriteOfflineRequest)
  // optional int32 friend_id = 1;
  if (this->friend_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->friend_id(), target);
  }

  // optional bytes msg = 2;
  if (this->msg().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ik_OfflineService.WriteOfflineRequest)
  return target;
}

int WriteOfflineRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ik_OfflineService.WriteOfflineRequest)
  int total_size = 0;

  // optional int32 friend_id = 1;
  if (this->friend_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->friend_id());
  }

  // optional bytes msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msg());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteOfflineRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ik_OfflineService.WriteOfflineRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const WriteOfflineRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteOfflineRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ik_OfflineService.WriteOfflineRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ik_OfflineService.WriteOfflineRequest)
    MergeFrom(*source);
  }
}

void WriteOfflineRequest::MergeFrom(const WriteOfflineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ik_OfflineService.WriteOfflineRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.friend_id() != 0) {
    set_friend_id(from.friend_id());
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void WriteOfflineRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ik_OfflineService.WriteOfflineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteOfflineRequest::CopyFrom(const WriteOfflineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ik_OfflineService.WriteOfflineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteOfflineRequest::IsInitialized() const {

  return true;
}

void WriteOfflineRequest::Swap(WriteOfflineRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteOfflineRequest::InternalSwap(WriteOfflineRequest* other) {
  std::swap(friend_id_, other->friend_id_);
  msg_.Swap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteOfflineRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WriteOfflineRequest_descriptor_;
  metadata.reflection = WriteOfflineRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WriteOfflineRequest

// optional int32 friend_id = 1;
void WriteOfflineRequest::clear_friend_id() {
  friend_id_ = 0;
}
 ::google::protobuf::int32 WriteOfflineRequest::friend_id() const {
  // @@protoc_insertion_point(field_get:ik_OfflineService.WriteOfflineRequest.friend_id)
  return friend_id_;
}
 void WriteOfflineRequest::set_friend_id(::google::protobuf::int32 value) {
  
  friend_id_ = value;
  // @@protoc_insertion_point(field_set:ik_OfflineService.WriteOfflineRequest.friend_id)
}

// optional bytes msg = 2;
void WriteOfflineRequest::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& WriteOfflineRequest::msg() const {
  // @@protoc_insertion_point(field_get:ik_OfflineService.WriteOfflineRequest.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WriteOfflineRequest::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ik_OfflineService.WriteOfflineRequest.msg)
}
 void WriteOfflineRequest::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ik_OfflineService.WriteOfflineRequest.msg)
}
 void WriteOfflineRequest::set_msg(const void* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ik_OfflineService.WriteOfflineRequest.msg)
}
 ::std::string* WriteOfflineRequest::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:ik_OfflineService.WriteOfflineRequest.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* WriteOfflineRequest::release_msg() {
  // @@protoc_insertion_point(field_release:ik_OfflineService.WriteOfflineRequest.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WriteOfflineRequest::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:ik_OfflineService.WriteOfflineRequest.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadOfflineRequest::kMyidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadOfflineRequest::ReadOfflineRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ik_OfflineService.ReadOfflineRequest)
}

void ReadOfflineRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ReadOfflineRequest::ReadOfflineRequest(const ReadOfflineRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ik_OfflineService.ReadOfflineRequest)
}

void ReadOfflineRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  myid_ = 0;
}

ReadOfflineRequest::~ReadOfflineRequest() {
  // @@protoc_insertion_point(destructor:ik_OfflineService.ReadOfflineRequest)
  SharedDtor();
}

void ReadOfflineRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReadOfflineRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadOfflineRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReadOfflineRequest_descriptor_;
}

const ReadOfflineRequest& ReadOfflineRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_OfflineService_2eproto();
  return *default_instance_;
}

ReadOfflineRequest* ReadOfflineRequest::default_instance_ = NULL;

ReadOfflineRequest* ReadOfflineRequest::New(::google::protobuf::Arena* arena) const {
  ReadOfflineRequest* n = new ReadOfflineRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadOfflineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ik_OfflineService.ReadOfflineRequest)
  myid_ = 0;
}

bool ReadOfflineRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ik_OfflineService.ReadOfflineRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 myid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &myid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ik_OfflineService.ReadOfflineRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ik_OfflineService.ReadOfflineRequest)
  return false;
#undef DO_
}

void ReadOfflineRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ik_OfflineService.ReadOfflineRequest)
  // optional int32 myid = 1;
  if (this->myid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->myid(), output);
  }

  // @@protoc_insertion_point(serialize_end:ik_OfflineService.ReadOfflineRequest)
}

::google::protobuf::uint8* ReadOfflineRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ik_OfflineService.ReadOfflineRequest)
  // optional int32 myid = 1;
  if (this->myid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->myid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ik_OfflineService.ReadOfflineRequest)
  return target;
}

int ReadOfflineRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ik_OfflineService.ReadOfflineRequest)
  int total_size = 0;

  // optional int32 myid = 1;
  if (this->myid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->myid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadOfflineRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ik_OfflineService.ReadOfflineRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReadOfflineRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadOfflineRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ik_OfflineService.ReadOfflineRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ik_OfflineService.ReadOfflineRequest)
    MergeFrom(*source);
  }
}

void ReadOfflineRequest::MergeFrom(const ReadOfflineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ik_OfflineService.ReadOfflineRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.myid() != 0) {
    set_myid(from.myid());
  }
}

void ReadOfflineRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ik_OfflineService.ReadOfflineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadOfflineRequest::CopyFrom(const ReadOfflineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ik_OfflineService.ReadOfflineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadOfflineRequest::IsInitialized() const {

  return true;
}

void ReadOfflineRequest::Swap(ReadOfflineRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadOfflineRequest::InternalSwap(ReadOfflineRequest* other) {
  std::swap(myid_, other->myid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadOfflineRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReadOfflineRequest_descriptor_;
  metadata.reflection = ReadOfflineRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadOfflineRequest

// optional int32 myid = 1;
void ReadOfflineRequest::clear_myid() {
  myid_ = 0;
}
 ::google::protobuf::int32 ReadOfflineRequest::myid() const {
  // @@protoc_insertion_point(field_get:ik_OfflineService.ReadOfflineRequest.myid)
  return myid_;
}
 void ReadOfflineRequest::set_myid(::google::protobuf::int32 value) {
  
  myid_ = value;
  // @@protoc_insertion_point(field_set:ik_OfflineService.ReadOfflineRequest.myid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadOfflineResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadOfflineResponse::ReadOfflineResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ik_OfflineService.ReadOfflineResponse)
}

void ReadOfflineResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ReadOfflineResponse::ReadOfflineResponse(const ReadOfflineResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ik_OfflineService.ReadOfflineResponse)
}

void ReadOfflineResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
}

ReadOfflineResponse::~ReadOfflineResponse() {
  // @@protoc_insertion_point(destructor:ik_OfflineService.ReadOfflineResponse)
  SharedDtor();
}

void ReadOfflineResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReadOfflineResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadOfflineResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReadOfflineResponse_descriptor_;
}

const ReadOfflineResponse& ReadOfflineResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_OfflineService_2eproto();
  return *default_instance_;
}

ReadOfflineResponse* ReadOfflineResponse::default_instance_ = NULL;

ReadOfflineResponse* ReadOfflineResponse::New(::google::protobuf::Arena* arena) const {
  ReadOfflineResponse* n = new ReadOfflineResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadOfflineResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ik_OfflineService.ReadOfflineResponse)
  msg_.Clear();
}

bool ReadOfflineResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ik_OfflineService.ReadOfflineResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes msg = 1;
      case 1: {
        if (tag == 10) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_msg;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ik_OfflineService.ReadOfflineResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ik_OfflineService.ReadOfflineResponse)
  return false;
#undef DO_
}

void ReadOfflineResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ik_OfflineService.ReadOfflineResponse)
  // repeated bytes msg = 1;
  for (int i = 0; i < this->msg_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->msg(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ik_OfflineService.ReadOfflineResponse)
}

::google::protobuf::uint8* ReadOfflineResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ik_OfflineService.ReadOfflineResponse)
  // repeated bytes msg = 1;
  for (int i = 0; i < this->msg_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->msg(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ik_OfflineService.ReadOfflineResponse)
  return target;
}

int ReadOfflineResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ik_OfflineService.ReadOfflineResponse)
  int total_size = 0;

  // repeated bytes msg = 1;
  total_size += 1 * this->msg_size();
  for (int i = 0; i < this->msg_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->msg(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadOfflineResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ik_OfflineService.ReadOfflineResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReadOfflineResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadOfflineResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ik_OfflineService.ReadOfflineResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ik_OfflineService.ReadOfflineResponse)
    MergeFrom(*source);
  }
}

void ReadOfflineResponse::MergeFrom(const ReadOfflineResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ik_OfflineService.ReadOfflineResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  msg_.MergeFrom(from.msg_);
}

void ReadOfflineResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ik_OfflineService.ReadOfflineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadOfflineResponse::CopyFrom(const ReadOfflineResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ik_OfflineService.ReadOfflineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadOfflineResponse::IsInitialized() const {

  return true;
}

void ReadOfflineResponse::Swap(ReadOfflineResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadOfflineResponse::InternalSwap(ReadOfflineResponse* other) {
  msg_.UnsafeArenaSwap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadOfflineResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReadOfflineResponse_descriptor_;
  metadata.reflection = ReadOfflineResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadOfflineResponse

// repeated bytes msg = 1;
int ReadOfflineResponse::msg_size() const {
  return msg_.size();
}
void ReadOfflineResponse::clear_msg() {
  msg_.Clear();
}
 const ::std::string& ReadOfflineResponse::msg(int index) const {
  // @@protoc_insertion_point(field_get:ik_OfflineService.ReadOfflineResponse.msg)
  return msg_.Get(index);
}
 ::std::string* ReadOfflineResponse::mutable_msg(int index) {
  // @@protoc_insertion_point(field_mutable:ik_OfflineService.ReadOfflineResponse.msg)
  return msg_.Mutable(index);
}
 void ReadOfflineResponse::set_msg(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ik_OfflineService.ReadOfflineResponse.msg)
  msg_.Mutable(index)->assign(value);
}
 void ReadOfflineResponse::set_msg(int index, const char* value) {
  msg_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ik_OfflineService.ReadOfflineResponse.msg)
}
 void ReadOfflineResponse::set_msg(int index, const void* value, size_t size) {
  msg_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ik_OfflineService.ReadOfflineResponse.msg)
}
 ::std::string* ReadOfflineResponse::add_msg() {
  // @@protoc_insertion_point(field_add_mutable:ik_OfflineService.ReadOfflineResponse.msg)
  return msg_.Add();
}
 void ReadOfflineResponse::add_msg(const ::std::string& value) {
  msg_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ik_OfflineService.ReadOfflineResponse.msg)
}
 void ReadOfflineResponse::add_msg(const char* value) {
  msg_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ik_OfflineService.ReadOfflineResponse.msg)
}
 void ReadOfflineResponse::add_msg(const void* value, size_t size) {
  msg_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ik_OfflineService.ReadOfflineResponse.msg)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
ReadOfflineResponse::msg() const {
  // @@protoc_insertion_point(field_list:ik_OfflineService.ReadOfflineResponse.msg)
  return msg_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
ReadOfflineResponse::mutable_msg() {
  // @@protoc_insertion_point(field_mutable_list:ik_OfflineService.ReadOfflineResponse.msg)
  return &msg_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

OfflineServiceRpc::~OfflineServiceRpc() {}

const ::google::protobuf::ServiceDescriptor* OfflineServiceRpc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OfflineServiceRpc_descriptor_;
}

const ::google::protobuf::ServiceDescriptor* OfflineServiceRpc::GetDescriptor() {
  protobuf_AssignDescriptorsOnce();
  return OfflineServiceRpc_descriptor_;
}

void OfflineServiceRpc::WriteOffline(::google::protobuf::RpcController* controller,
                         const ::ik_OfflineService::WriteOfflineRequest*,
                         ::google::protobuf::Empty*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method WriteOffline() not implemented.");
  done->Run();
}

void OfflineServiceRpc::ReadOffline(::google::protobuf::RpcController* controller,
                         const ::ik_OfflineService::ReadOfflineRequest*,
                         ::ik_OfflineService::ReadOfflineResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ReadOffline() not implemented.");
  done->Run();
}

void OfflineServiceRpc::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), OfflineServiceRpc_descriptor_);
  switch(method->index()) {
    case 0:
      WriteOffline(controller,
             ::google::protobuf::down_cast<const ::ik_OfflineService::WriteOfflineRequest*>(request),
             ::google::protobuf::down_cast< ::google::protobuf::Empty*>(response),
             done);
      break;
    case 1:
      ReadOffline(controller,
             ::google::protobuf::down_cast<const ::ik_OfflineService::ReadOfflineRequest*>(request),
             ::google::protobuf::down_cast< ::ik_OfflineService::ReadOfflineResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& OfflineServiceRpc::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::ik_OfflineService::WriteOfflineRequest::default_instance();
    case 1:
      return ::ik_OfflineService::ReadOfflineRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& OfflineServiceRpc::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::google::protobuf::Empty::default_instance();
    case 1:
      return ::ik_OfflineService::ReadOfflineResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

OfflineServiceRpc_Stub::OfflineServiceRpc_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
OfflineServiceRpc_Stub::OfflineServiceRpc_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
OfflineServiceRpc_Stub::~OfflineServiceRpc_Stub() {
  if (owns_channel_) delete channel_;
}

void OfflineServiceRpc_Stub::WriteOffline(::google::protobuf::RpcController* controller,
                              const ::ik_OfflineService::WriteOfflineRequest* request,
                              ::google::protobuf::Empty* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void OfflineServiceRpc_Stub::ReadOffline(::google::protobuf::RpcController* controller,
                              const ::ik_OfflineService::ReadOfflineRequest* request,
                              ::ik_OfflineService::ReadOfflineResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace ik_OfflineService

// @@protoc_insertion_point(global_scope)
