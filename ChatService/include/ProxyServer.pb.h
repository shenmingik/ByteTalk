// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProxyServer.proto

#ifndef PROTOBUF_ProxyServer_2eproto__INCLUDED
#define PROTOBUF_ProxyServer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ik_Proxy {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_ProxyServer_2eproto();
void protobuf_AssignDesc_ProxyServer_2eproto();
void protobuf_ShutdownFile_ProxyServer_2eproto();

class PoxryMessage;
class PoxryResponse;

// ===================================================================

class PoxryMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ik_Proxy.PoxryMessage) */ {
 public:
  PoxryMessage();
  virtual ~PoxryMessage();

  PoxryMessage(const PoxryMessage& from);

  inline PoxryMessage& operator=(const PoxryMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PoxryMessage& default_instance();

  void Swap(PoxryMessage* other);

  // implements Message ----------------------------------------------

  inline PoxryMessage* New() const { return New(NULL); }

  PoxryMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PoxryMessage& from);
  void MergeFrom(const PoxryMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PoxryMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  void set_type(const char* value);
  void set_type(const void* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // optional bytes request_msg = 2;
  void clear_request_msg();
  static const int kRequestMsgFieldNumber = 2;
  const ::std::string& request_msg() const;
  void set_request_msg(const ::std::string& value);
  void set_request_msg(const char* value);
  void set_request_msg(const void* value, size_t size);
  ::std::string* mutable_request_msg();
  ::std::string* release_request_msg();
  void set_allocated_request_msg(::std::string* request_msg);

  // @@protoc_insertion_point(class_scope:ik_Proxy.PoxryMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr request_msg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProxyServer_2eproto();
  friend void protobuf_AssignDesc_ProxyServer_2eproto();
  friend void protobuf_ShutdownFile_ProxyServer_2eproto();

  void InitAsDefaultInstance();
  static PoxryMessage* default_instance_;
};
// -------------------------------------------------------------------

class PoxryResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ik_Proxy.PoxryResponse) */ {
 public:
  PoxryResponse();
  virtual ~PoxryResponse();

  PoxryResponse(const PoxryResponse& from);

  inline PoxryResponse& operator=(const PoxryResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PoxryResponse& default_instance();

  void Swap(PoxryResponse* other);

  // implements Message ----------------------------------------------

  inline PoxryResponse* New() const { return New(NULL); }

  PoxryResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PoxryResponse& from);
  void MergeFrom(const PoxryResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PoxryResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  void set_type(const char* value);
  void set_type(const void* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // optional bytes response_msg = 2;
  void clear_response_msg();
  static const int kResponseMsgFieldNumber = 2;
  const ::std::string& response_msg() const;
  void set_response_msg(const ::std::string& value);
  void set_response_msg(const char* value);
  void set_response_msg(const void* value, size_t size);
  ::std::string* mutable_response_msg();
  ::std::string* release_response_msg();
  void set_allocated_response_msg(::std::string* response_msg);

  // @@protoc_insertion_point(class_scope:ik_Proxy.PoxryResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr response_msg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProxyServer_2eproto();
  friend void protobuf_AssignDesc_ProxyServer_2eproto();
  friend void protobuf_ShutdownFile_ProxyServer_2eproto();

  void InitAsDefaultInstance();
  static PoxryResponse* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PoxryMessage

// optional bytes type = 1;
inline void PoxryMessage::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PoxryMessage::type() const {
  // @@protoc_insertion_point(field_get:ik_Proxy.PoxryMessage.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PoxryMessage::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ik_Proxy.PoxryMessage.type)
}
inline void PoxryMessage::set_type(const char* value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ik_Proxy.PoxryMessage.type)
}
inline void PoxryMessage::set_type(const void* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ik_Proxy.PoxryMessage.type)
}
inline ::std::string* PoxryMessage::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:ik_Proxy.PoxryMessage.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PoxryMessage::release_type() {
  // @@protoc_insertion_point(field_release:ik_Proxy.PoxryMessage.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PoxryMessage::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:ik_Proxy.PoxryMessage.type)
}

// optional bytes request_msg = 2;
inline void PoxryMessage::clear_request_msg() {
  request_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PoxryMessage::request_msg() const {
  // @@protoc_insertion_point(field_get:ik_Proxy.PoxryMessage.request_msg)
  return request_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PoxryMessage::set_request_msg(const ::std::string& value) {
  
  request_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ik_Proxy.PoxryMessage.request_msg)
}
inline void PoxryMessage::set_request_msg(const char* value) {
  
  request_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ik_Proxy.PoxryMessage.request_msg)
}
inline void PoxryMessage::set_request_msg(const void* value, size_t size) {
  
  request_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ik_Proxy.PoxryMessage.request_msg)
}
inline ::std::string* PoxryMessage::mutable_request_msg() {
  
  // @@protoc_insertion_point(field_mutable:ik_Proxy.PoxryMessage.request_msg)
  return request_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PoxryMessage::release_request_msg() {
  // @@protoc_insertion_point(field_release:ik_Proxy.PoxryMessage.request_msg)
  
  return request_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PoxryMessage::set_allocated_request_msg(::std::string* request_msg) {
  if (request_msg != NULL) {
    
  } else {
    
  }
  request_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_msg);
  // @@protoc_insertion_point(field_set_allocated:ik_Proxy.PoxryMessage.request_msg)
}

// -------------------------------------------------------------------

// PoxryResponse

// optional bytes type = 1;
inline void PoxryResponse::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PoxryResponse::type() const {
  // @@protoc_insertion_point(field_get:ik_Proxy.PoxryResponse.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PoxryResponse::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ik_Proxy.PoxryResponse.type)
}
inline void PoxryResponse::set_type(const char* value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ik_Proxy.PoxryResponse.type)
}
inline void PoxryResponse::set_type(const void* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ik_Proxy.PoxryResponse.type)
}
inline ::std::string* PoxryResponse::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:ik_Proxy.PoxryResponse.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PoxryResponse::release_type() {
  // @@protoc_insertion_point(field_release:ik_Proxy.PoxryResponse.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PoxryResponse::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:ik_Proxy.PoxryResponse.type)
}

// optional bytes response_msg = 2;
inline void PoxryResponse::clear_response_msg() {
  response_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PoxryResponse::response_msg() const {
  // @@protoc_insertion_point(field_get:ik_Proxy.PoxryResponse.response_msg)
  return response_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PoxryResponse::set_response_msg(const ::std::string& value) {
  
  response_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ik_Proxy.PoxryResponse.response_msg)
}
inline void PoxryResponse::set_response_msg(const char* value) {
  
  response_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ik_Proxy.PoxryResponse.response_msg)
}
inline void PoxryResponse::set_response_msg(const void* value, size_t size) {
  
  response_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ik_Proxy.PoxryResponse.response_msg)
}
inline ::std::string* PoxryResponse::mutable_response_msg() {
  
  // @@protoc_insertion_point(field_mutable:ik_Proxy.PoxryResponse.response_msg)
  return response_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PoxryResponse::release_response_msg() {
  // @@protoc_insertion_point(field_release:ik_Proxy.PoxryResponse.response_msg)
  
  return response_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PoxryResponse::set_allocated_response_msg(::std::string* response_msg) {
  if (response_msg != NULL) {
    
  } else {
    
  }
  response_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_msg);
  // @@protoc_insertion_point(field_set_allocated:ik_Proxy.PoxryResponse.response_msg)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ik_Proxy

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProxyServer_2eproto__INCLUDED
